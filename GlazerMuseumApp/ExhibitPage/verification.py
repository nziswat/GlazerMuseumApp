#This File was generated by Django and modified by: Kevin Panasiuk
#Log:
#4/1/24: Made this header.
#4/2/24: Added comments

#This middleware is used to loosely ensure that each vote is unique to each voter.
#Some caveats: this isn't secure at all and operates under the assumption no one will bother to mess with the cookies on their own device.
import uuid
from django.utils.deprecation import MiddlewareMixin

class VerifyUser(MiddlewareMixin):  #This custom middleware runs on every page
    def process_request(self, request): #request from the user
        if not request.COOKIES.get('user_id'): #if there is no user_id id cookie
            unique_id = uuid.uuid4() #generate a unique ID  
            request.unique_id = unique_id #assign the generated id to the user's cookie
        else:
            request.unique_id = request.COOKIES['user_id'] #but if the user already has a cookie, for the id, just keep using it 

    def process_response(self, request, response): #called when something needs to use this cookie
        if not request.COOKIES.get('user_id'): 
            response.set_cookie('user_id', request.unique_id, max_age=86400)  # the cookie here expires in just one day, letting the user come back the next day and vote again, uniquely.
        return response